{"version":3,"file":"main.js","mappings":"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","sources":["webpack://project/./src/components/api.js","webpack://project/./src/components/modal.js","webpack://project/./src/components/card.js","webpack://project/./src/components/validation.js","webpack://project/./src/index.js"],"sourcesContent":["const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-41',\n  headers: {\n    authorization: 'cc30cf87-5e95-4f37-b531-4cbe11b441db',\n    'Content-Type': 'application/json',\n  },\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n}\n\nconst getCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nconst getProfile = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nconst updateEditProfile = (nameValue, jobValue) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: nameValue,\n      about: jobValue,\n    }),\n  }).then(checkResponse);\n};\n\nconst addNewCard = (inputNameFormNewCardValue, inputLinkFormNewCardValue) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: inputNameFormNewCardValue,\n      link: inputLinkFormNewCardValue,\n    }),\n  }).then(checkResponse);\n};\n\nconst deleteCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nconst updateLikeCard = (cardId, isLike) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: isLike ? 'PUT' : 'DELETE',\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nconst updateProfileAvatar = (inputLinkAva) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: inputLinkAva,\n    }),\n  }).then(checkResponse);\n};\nexport default {\n  getCards,\n  getProfile,\n  updateEditProfile,\n  addNewCard,\n  deleteCard,\n  updateLikeCard,\n  updateProfileAvatar,\n};\n","function closeModalOnEscape(evt) {\n  if (evt.key === 'Escape') {\n    const popup = document.querySelector('.popup_is-opened');\n    closeModal(popup);\n  }\n}\n\nfunction overlayClick(evt) {\n  const popupOpen = document.querySelector('.popup_is-opened');\n  if (popupOpen && evt.target === popupOpen) {\n    closeModal(popupOpen);\n  }\n}\nfunction openModal(popupModal) {\n  popupModal.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closeModalOnEscape);\n  document.addEventListener('click', overlayClick);\n}\n\nfunction closeModal(closeModal) {\n  closeModal.classList.remove('popup_is-opened');\n  closeModal.classList.add('popup_is-animated');\n  document.removeEventListener('keydown', closeModalOnEscape);\n  document.removeEventListener('click', overlayClick);\n}\n\nfunction setupPopupClose(popupEdit) {\n  const popupClose = popupEdit.querySelector('.popup__close');\n  popupClose.addEventListener('click', () => {\n    closeModal(popupEdit);\n  });\n}\n\nexport { closeModal, openModal, setupPopupClose };\n","// @todo: Темплейт карточки\nimport api from './api.js';\nconst cardTemplate = document.querySelector('#card-template').content;\n\n// @todo: Функция создания карточки\nconst createCard = (\n  cardData,\n  onDeleteCard,\n  onLikeCard,\n  onOpenImagePopup,\n  ownerId\n) => {\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const deleteCardButton = cardElement.querySelector('.card__delete-button');\n  const cardImage = cardElement.querySelector('.card__image');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const counterLikeCard = cardElement.querySelector('.card__likes_count');\n  cardElement.querySelector('.card__title').textContent = cardData.name;\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.alt;\n  counterLikeCard.textContent = cardData.likes.length;\n\n  if (\n    cardData.likes.some((value) => {\n      return value._id === ownerId;\n    })\n  ) {\n    likeButton.classList.add('card__like-button_is-active');\n  }\n\n  if (cardData.owner._id === ownerId) {\n    deleteCardButton.style = '';\n    deleteCardButton.addEventListener('click', () =>\n      onDeleteCard(cardElement, cardData._id)\n    );\n  }\n  cardImage.addEventListener('click', () => onOpenImagePopup(cardData));\n  likeButton.addEventListener('click', () =>\n    onLikeCard(cardData._id, likeButton, counterLikeCard)\n  );\n  return cardElement;\n};\n\n// @todo: Функция удаления карточки\nconst deleteCard = (cardElement, cardId) => {\n  api\n    .deleteCard(cardId)\n    .then(() => {\n      cardElement.remove(); // 30 не понял\n    })\n    .catch((err) => {\n      console.log(err); // \"Что-то пошло не так: ..\"\n    });\n};\n// @todo: Функция добавления/удаления лайка\n\nconst likeCard = (cardId, likeButton, counterLikeCard) => {\n  if (likeButton.classList.contains('card__like-button_is-active')) {\n    api\n      .updateLikeCard(cardId, false)\n      .then((res) => {\n        counterLikeCard.textContent = res.likes.length;\n        likeButton.classList.remove('card__like-button_is-active');\n      })\n      .catch((err) => {\n        console.log(err); // \"Что-то пошло не так: ...\"\n      });\n  } else {\n    api\n      .updateLikeCard(cardId, true)\n      .then((res) => {\n        counterLikeCard.textContent = res.likes.length;\n        likeButton.classList.add('card__like-button_is-active');\n      })\n      .catch((err) => {\n        console.log(err); // \"Что-то пошло не так: ...\"\n      });\n  }\n};\n\nexport { createCard, deleteCard, likeCard };\n","/* const validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n}; */\n\n// включение валидации вызовом enableValidation\n// все настройки передаются при вызове\n////// работа с формами\n\n// Передадим текст ошибки вторым параметром\nconst showInputError = (\n  popupElement,\n  popupInput,\n  errorMessage,\n  validationConfig\n) => {\n  // Находим элемент ошибки внутри самой функции\n  const errorElement = popupElement.querySelector(`.${popupInput.id}-error`);\n  // Остальной код такой же\n  popupInput.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\n\nconst hideInputError = (popupElement, popupInput, validationConfig) => {\n  // Находим элемент ошибки\n  const errorElement = popupElement.querySelector(`.${popupInput.id}-error`);\n  // Остальной код такой же\n  popupInput.classList.remove(validationConfig.inputErrorClass);\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = '';\n};\n\n// Функция isValid теперь принимает formElement и inputElement,\n// а не берёт их из внешней области видимости\n\nconst isValid = (popupElement, popupInput, validationConfig) => {\n  if (popupInput.validity.patternMismatch) {\n    // данные атрибута доступны у элемента инпута через ключевое слово dataset.\n    // обратите внимание, что в js имя атрибута пишется в camelCase (да-да, в\n    // HTML мы писали в kebab-case, это не опечатка)\n    popupInput.setCustomValidity(popupInput.dataset.errorMessage);\n  } else {\n    popupInput.setCustomValidity('');\n  }\n  if (!popupInput.validity.valid) {\n    // showInputError теперь получает параметром форму, в которой\n    // находится проверяемое поле, и само это поле\n    showInputError(\n      popupElement,\n      popupInput,\n      popupInput.validationMessage,\n      validationConfig\n    );\n  } else {\n    // hideInputError теперь получает параметром форму, в которой\n    // находится проверяемое поле, и само это поле\n    hideInputError(popupElement, popupInput, validationConfig);\n  }\n};\n\nconst setEventListeners = (popupElement, validationConfig) => {\n  // Найдём все поля формы и сделаем из них массив\n  const inputList = Array.from(\n    popupElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  // Найдём в текущей форме кнопку отправки\n  const buttonElement = popupElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n  toggleButtonState(\n    inputList,\n    buttonElement,\n    validationConfig.inactiveButtonClass\n  );\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', () => {\n      isValid(popupElement, inputElement, validationConfig);\n\n      // Вызовем toggleButtonState и передадим ей массив полей и кнопку\n      toggleButtonState(\n        inputList,\n        buttonElement,\n        validationConfig.inactiveButtonClass\n      );\n    });\n  });\n};\n\n//\n// Функция принимает массив полей\n\nconst hasInvalidInput = (inputList) => {\n  // проходим по этому массиву методом some\n  return inputList.some((popupInput) => {\n    // Если поле не валидно, колбэк вернёт true\n    // Обход массива прекратится и вся функция\n    // hasInvalidInput вернёт true\n\n    return !popupInput.validity.valid;\n  });\n};\n\n// Функция принимает массив полей ввода\n// и элемент кнопки, состояние которой нужно менять\n\nconst toggleButtonState = (inputList, buttonElement, inactiveButtonClass) => {\n  // Если есть хотя бы один невалидный инпут\n  if (hasInvalidInput(inputList)) {\n    // сделай кнопку неактивной\n    buttonElement.disabled = true;\n    buttonElement.classList.add(inactiveButtonClass);\n  } else {\n    // иначе сделай кнопку активной\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(inactiveButtonClass);\n  }\n};\n\n//\n\nconst enableValidation = (validationConfig) => {\n  // Найдём все формы с указанным классом в DOM,\n  // сделаем из них массив методом Array.from\n  const formList = Array.from(\n    document.querySelectorAll(validationConfig.formSelector)\n  );\n\n  // Переберём полученную коллекцию\n  formList.forEach((popupElement) => {\n    // Для каждой формы вызовем функцию setEventListeners,\n    // передав ей элемент формы\n    setEventListeners(popupElement, validationConfig);\n  });\n};\n\nconst clearValidation = (popupElement, validationConfig) => {\n  const inputList = Array.from(\n    popupElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  inputList.forEach((input) => {\n    input.setCustomValidity('');\n    hideInputError(popupElement, input, validationConfig);\n  });\n  const btn = popupElement.querySelector(validationConfig.submitButtonSelector);\n  btn.disabled = true;\n  btn.classList.add(validationConfig.inactiveButtonClass);\n};\n\nexport { enableValidation, clearValidation };\n","// index.js\n\nimport './pages/index.css'; // добавьте импорт главного файла стилей\nimport api from './components/api.js';\nimport { closeModal, openModal, setupPopupClose } from './components/modal.js';\nimport { createCard, deleteCard, likeCard } from './components/card.js';\nimport { enableValidation, clearValidation } from './components/validation.js';\n\n// @todo: DOM узлы\nconst content = document.querySelector('.content');\nconst placesList = content.querySelector('.places__list');\n\nconst profileEditButton = document.querySelector('.profile__edit-button');\n// icon\nconst profileEditIcon = document.querySelector('.profile__edit-icon');\n\nconst popupEdit = document.querySelector('.popup_type_edit');\nsetupPopupClose(popupEdit);\n\n// Выберите элементы, куда должны быть вставлены значения полей\nconst profileName = document.querySelector('.profile__title');\nconst profileJob = document.querySelector('.profile__description');\nconst profileImage = document.querySelector('.profile__image');\nconst profileAddButton = document.querySelector('.profile__add-button');\n\nconst imagePopupContainer = document.querySelector('.popup_type_image');\nsetupPopupClose(imagePopupContainer);\n\nconst popupNewCard = document.querySelector('.popup_type_new-card');\nsetupPopupClose(popupNewCard);\n\nconst profileInfoInputName = popupEdit.querySelector('.popup__input_type_name');\nconst profileInfoInputDescription = popupEdit.querySelector(\n  '.popup__input_type_description'\n);\n\nconst popupImage = imagePopupContainer.querySelector('.popup__image');\nconst popupImageCaption = imagePopupContainer.querySelector('.popup__caption');\n\n// работа с формой\n// Находим форму в DOM\nconst formElementEditProfile = document.forms['edit-profile'];\n// Находим поля формы в DOM\nconst nameInput = formElementEditProfile.elements.name;\nconst jobInput = formElementEditProfile.elements.description;\n\nconst newPlaceCardForm = document.forms['new-place'];\nconst inputNameFormNewCard = newPlaceCardForm.elements['place-name'];\nconst inputLinkFormNewCard = newPlaceCardForm.elements['link'];\n//// icon form\nconst popupTypeAva = document.querySelector('.popup_type_ava');\nsetupPopupClose(popupTypeAva);\nconst updateAva = document.forms['new-ava'];\nconst inputLinkAva = updateAva.elements['link'];\n\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};\nenableValidation(validationConfig);\n\nfunction openImagePopup(data) {\n  popupImage.src = data.link;\n  popupImage.alt = data.name;\n  popupImageCaption.textContent = data.name;\n  openModal(imagePopupContainer);\n}\nlet userId;\n// @todo: Вывести карточки на страницу\nPromise.all([api.getProfile(), api.getCards()])\n  .then(([userData, cardsArray]) => {\n    userId = userData._id;\n    profileName.textContent = userData.name;\n    profileJob.textContent = userData.about;\n    profileImage.style = `background-image: url(${userData.avatar})`;\n    cardsArray.forEach((card) => {\n      const cardElement = createCard(\n        card,\n        deleteCard,\n        likeCard,\n        openImagePopup,\n        userId\n      );\n      placesList.append(cardElement);\n    });\n\n    // Нет необходимости возвращать данные return results\n  })\n  .catch((err) => {\n    console.log(err); // \"Что-то пошло не так: ...\"\n  });\n\n// откр/ редактора карточки\nprofileEditButton.addEventListener('click', function (evt) {\n  profileInfoInputName.value = profileName.textContent;\n  profileInfoInputDescription.value = profileJob.textContent;\n  openModal(popupEdit);\n  clearValidation(popupEdit, validationConfig);\n  evt.stopPropagation();\n});\n\nprofileEditIcon.addEventListener('click', function (evt) {\n  openModal(popupTypeAva);\n  clearValidation(popupTypeAva, validationConfig);\n  evt.stopPropagation();\n});\nupdateAva.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  changeStateSubmitBtn(evt, true);\n  api\n    .updateProfileAvatar(inputLinkAva.value)\n    .then((result) => {\n      profileImage.style = `background-image: url(${result.avatar})`;\n      updateAva.reset();\n      closeModal(popupTypeAva);\n    })\n    .catch((err) => {\n      console.log(err); // \"Что-то пошло не так: ...\"\n    })\n    .finally(() => {\n      changeStateSubmitBtn(evt, false);\n    });\n});\n\n// закр через  +\nnewPlaceCardForm.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  changeStateSubmitBtn(evt, true);\n  api\n    .addNewCard(inputNameFormNewCard.value, inputLinkFormNewCard.value)\n    .then((cardData) => {\n      const cardElement = createCard(\n        cardData,\n        deleteCard,\n        likeCard,\n        openImagePopup,\n        userId\n      );\n      placesList.prepend(cardElement);\n      newPlaceCardForm.reset();\n      closeModal(popupNewCard);\n    })\n    .catch((err) => {\n      console.log(err); // \"Что-то пошло не так: ...\"\n    })\n    .finally(() => {\n      changeStateSubmitBtn(evt, false);\n    });\n});\n\nprofileAddButton.addEventListener('click', (evt) => {\n  clearValidation(popupNewCard, validationConfig);\n  openModal(popupNewCard);\n  evt.stopPropagation();\n});\n\n//changeStateSubmitBtn button\nfunction changeStateSubmitBtn(evt, load) {\n  const submitButton = evt.submitter;\n  if (load) {\n    submitButton.textContent = 'Сохранение...';\n    submitButton.disablaed = true;\n  } else {\n    submitButton.textContent = 'Сохранить';\n    submitButton.disablaed = false;\n  }\n}\n\n// Обработчик «отправки» формы, хотя пока\n// она никуда отправляться не будет\nfunction handleFormSubmitEditProfile(evt) {\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\n  changeStateSubmitBtn(evt, true);\n  // Так мы можем определить свою логику отправки.\n  // О том, как это делать, расскажем позже.\n\n  // Получите значение полей jobInput и nameInput из свойства value\n  const nameValue = nameInput.value;\n  const jobValue = jobInput.value;\n\n  // Вставьте новые значения с помощью textContent\n\n  api\n    .updateEditProfile(nameValue, jobValue)\n    .then((userData) => {\n      profileName.textContent = userData.name;\n      profileJob.textContent = userData.about;\n      closeModal(popupEdit);\n    })\n    .catch((err) => {\n      console.log(err); // \"Что-то пошло не так: ...\"\n    })\n    .finally(() => {\n      changeStateSubmitBtn(evt, false);\n    });\n}\n\n// Прикрепляем обработчик к форме:\n// он будет следить за событием “submit” - «отправка»\nformElementEditProfile.addEventListener('submit', handleFormSubmitEditProfile);\n"],"names":["config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","cardId","isLike","fetch","method","then","closeModalOnEscape","evt","key","closeModal","document","querySelector","overlayClick","popupOpen","target","openModal","popupModal","classList","add","addEventListener","remove","removeEventListener","setupPopupClose","popupEdit","cardTemplate","content","createCard","cardData","onDeleteCard","onLikeCard","onOpenImagePopup","ownerId","cardElement","cloneNode","deleteCardButton","cardImage","likeButton","counterLikeCard","textContent","name","src","link","alt","likes","length","some","value","_id","owner","style","deleteCard","api","catch","err","console","log","likeCard","contains","hideInputError","popupElement","popupInput","validationConfig","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","inactiveButtonClass","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","forEach","input","setCustomValidity","btn","submitButtonSelector","placesList","profileEditButton","profileEditIcon","profileName","profileJob","profileImage","profileAddButton","imagePopupContainer","popupNewCard","profileInfoInputName","profileInfoInputDescription","popupImage","popupImageCaption","formElementEditProfile","forms","nameInput","elements","jobInput","description","newPlaceCardForm","inputNameFormNewCard","inputLinkFormNewCard","popupTypeAva","userId","updateAva","inputLinkAva","formSelector","openImagePopup","data","changeStateSubmitBtn","load","submitButton","submitter","disablaed","inputElement","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation","all","_ref","_ref2","userData","cardsArray","about","avatar","card","append","stopPropagation","preventDefault","body","JSON","stringify","result","reset","finally","inputNameFormNewCardValue","inputLinkFormNewCardValue","prepend","nameValue","jobValue"],"sourceRoot":""}