{"version":3,"file":"main.js","mappings":"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","sources":["webpack://project/./src/components/api.js","webpack://project/./src/components/modal.js","webpack://project/./src/components/card.js","webpack://project/./src/components/validation.js","webpack://project/./src/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-41',\r\n    headers: {\r\n        authorization: 'cc30cf87-5e95-4f37-b531-4cbe11b441db',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nconst token = 'cc30cf87-5e95-4f37-b531-4cbe11b441db'\r\n\r\nconst getCards = () => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n\r\n            /* отклоняем промис, чтобы перейти\r\n            в блок catch, если сервер вернул ошибку */\r\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err); // \"Что-то пошло не так: ...\"\r\n        });\r\n}\r\n\r\nconst getProfile = () => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) { \r\n                return res.json();\r\n            }\r\n\r\n            /* отклоняем промис, чтобы перейти\r\n            в блок catch, если сервер вернул ошибку */\r\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err); // \"Что-то пошло не так: ...\"\r\n        });\r\n}\r\n\r\nconst updateEditProfile = (nameValue, jobValue) => {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: nameValue,\r\n            about: jobValue\r\n        })\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n\r\n            /* отклоняем промис, чтобы перейти\r\n            в блок catch, если сервер вернул ошибку */\r\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err); // \"Что-то пошло не так: ...\"\r\n        });\r\n}\r\n\r\nconst addNewCard = (inputNameFormNewCardValue, inputLinkFormNewCardValue) => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify({\r\n            name: inputNameFormNewCardValue,\r\n            link: inputLinkFormNewCardValue\r\n        })\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n\r\n            /* отклоняем промис, чтобы перейти\r\n            в блок catch, если сервер вернул ошибку */\r\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err); // \"Что-то пошло не так: ...\"\r\n        });\r\n}\r\n\r\n\r\nconst deleteCard = (cardId) => {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n       headers: config.headers,\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n\r\n            //отклоняем промис, чтобы перейти    в блок catch, если сервер вернул ошибку \r\n\r\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err); // \"Что-то пошло не так: ...\"\r\n        });\r\n}\r\n\r\nconst updateLikeCard = (cardId, isLike) => {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: isLike ? 'PUT' : 'DELETE',\r\n       headers: config.headers,\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n\r\n            //отклоняем промис, чтобы перейти    в блок catch, если сервер вернул ошибку \r\n\r\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err); // \"Что-то пошло не так: ...\"\r\n        });\r\n}\r\n\r\nconst updateProfileAvatar = (inputLinkAva) => {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n       headers: config.headers,\r\n        body: JSON.stringify({\r\n            avatar: inputLinkAva\r\n        })\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n\r\n            /* отклоняем промис, чтобы перейти\r\n            в блок catch, если сервер вернул ошибку */\r\n            return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err); // \"Что-то пошло не так: ...\"\r\n        });\r\n}\r\nexport default { getCards, getProfile, updateEditProfile, addNewCard, deleteCard, updateLikeCard, updateProfileAvatar }\r\n","function closeModalOnEscape (evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    closeModal(popup);\r\n  }\r\n}\r\n\r\nfunction overlayClick(evt) {\r\n  const popupOpen = document.querySelector('.popup_is-opened');\r\n  if (popupOpen && evt.target === popupOpen) {\r\n    closeModal(popupOpen);\r\n  }\r\n}\r\nfunction openModal(popupModal) {\r\n  popupModal.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalOnEscape );\r\n  document.addEventListener('click', overlayClick);\r\n}\r\n\r\nfunction closeModal(closeModal) {\r\n  closeModal.classList.remove('popup_is-opened');\r\n  closeModal.classList.add('popup_is-animated');\r\n  document.removeEventListener('keydown', closeModalOnEscape );\r\n  document.removeEventListener('click', overlayClick);\r\n}\r\n\r\nfunction setupPopupClose(popupEdit) {\r\n  const popupClose = popupEdit.querySelector('.popup__close');\r\n  popupClose.addEventListener('click', () => {\r\n    closeModal(popupEdit);\r\n  });\r\n}\r\n\r\nexport { closeModal, openModal, setupPopupClose };\r\n","// @todo: Темплейт карточки\r\nimport api from './api.js';\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// @todo: Функция создания карточки\r\nconst createCard = (cardData, onDeleteCard, onLikeCard, onOpenImagePopup, ownerName) => {\r\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const deleteCardButton = cardElement.querySelector('.card__delete-button');\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n  const counterLikeCard = cardElement.querySelector('.card__likes_count');\r\n  cardElement.querySelector('.card__title').textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.alt;\r\n  counterLikeCard.textContent = cardData.likes.length;\r\n\r\n  if (cardData.owner.name === ownerName) {\r\n    deleteCardButton.style = '';\r\n    deleteCardButton.addEventListener('click', () => onDeleteCard(cardElement, cardData._id));\r\n  }\r\n  cardImage.addEventListener('click', () => onOpenImagePopup(cardData));\r\n  likeButton.addEventListener('click', () => onLikeCard(cardData._id, likeButton, counterLikeCard));\r\n  return cardElement;\r\n};\r\n\r\n\r\n// @todo: Функция удаления карточки\r\nconst deleteCard = (cardElement, cardId) => {\r\n  api.deleteCard(cardId)\r\n  cardElement.remove();\r\n}\r\n// @todo: Функция добавления/удаления лайка\r\n\r\nconst likeCard = (cardId, likeButton, counterLikeCard) => {\r\n  if (likeButton.classList.contains('card__like-button_is-active')) {\r\n    likeButton.classList.remove('card__like-button_is-active');\r\n    api.updateLikeCard(cardId, false).then((res) => {\r\n      counterLikeCard.textContent = res.likes.length;\r\n    })\r\n  } else {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n    api.updateLikeCard(cardId, true).then((res) => {\r\n      counterLikeCard.textContent = res.likes.length;\r\n    })\r\n  }\r\n};\r\n\r\nexport { createCard, deleteCard, likeCard };\r\n","/* const validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}; */\r\n\r\n// включение валидации вызовом enableValidation\r\n// все настройки передаются при вызове\r\n////// работа с формами\r\n\r\n// Передадим текст ошибки вторым параметром\r\nconst showInputError = (popupElement, popupInput, errorMessage, validationConfig) => {\r\n  // Находим элемент ошибки внутри самой функции\r\n  const errorElement = popupElement.querySelector(`.${popupInput.id}-error`);\r\n  // Остальной код такой же\r\n  popupInput.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (popupElement, popupInput, validationConfig) => {\r\n  // Находим элемент ошибки\r\n  const errorElement = popupElement.querySelector(`.${popupInput.id}-error`);\r\n  // Остальной код такой же\r\n  popupInput.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n\r\n// Функция isValid теперь принимает formElement и inputElement,\r\n// а не берёт их из внешней области видимости\r\n\r\nconst isValid = (popupElement, popupInput, validationConfig) => {\r\n  if (popupInput.validity.patternMismatch) {\r\n    // данные атрибута доступны у элемента инпута через ключевое слово dataset.\r\n    // обратите внимание, что в js имя атрибута пишется в camelCase (да-да, в\r\n    // HTML мы писали в kebab-case, это не опечатка)\r\n    popupInput.setCustomValidity(popupInput.dataset.errorMessage);\r\n  } else {\r\n    popupInput.setCustomValidity(\"\");\r\n  }\r\n  if (!popupInput.validity.valid) {\r\n    // showInputError теперь получает параметром форму, в которой\r\n    // находится проверяемое поле, и само это поле\r\n    showInputError(popupElement, popupInput, popupInput.validationMessage, validationConfig);\r\n  } else {\r\n    // hideInputError теперь получает параметром форму, в которой\r\n    // находится проверяемое поле, и само это поле\r\n    hideInputError(popupElement, popupInput, validationConfig);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (popupElement, validationConfig) => {\r\n  // Найдём все поля формы и сделаем из них массив\r\n  const inputList = Array.from(popupElement.querySelectorAll(validationConfig.inputSelector));\r\n  // Найдём в текущей форме кнопку отправки\r\n  const buttonElement = popupElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', () => {\r\n      isValid(popupElement, inputElement, validationConfig);\r\n\r\n      // Вызовем toggleButtonState и передадим ей массив полей и кнопку\r\n      toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\n//\r\n// Функция принимает массив полей\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  // проходим по этому массиву методом some\r\n  return inputList.some((popupInput) => {\r\n    // Если поле не валидно, колбэк вернёт true\r\n    // Обход массива прекратится и вся функция\r\n    // hasInvalidInput вернёт true\r\n\r\n    return !popupInput.validity.valid;\r\n  })\r\n};\r\n\r\n// Функция принимает массив полей ввода\r\n// и элемент кнопки, состояние которой нужно менять\r\n\r\nconst toggleButtonState = (inputList, buttonElement, inactiveButtonClass) => {\r\n  // Если есть хотя бы один невалидный инпут\r\n  if (hasInvalidInput(inputList)) {\r\n    // сделай кнопку неактивной\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n  } else {\r\n    // иначе сделай кнопку активной\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n  }\r\n};\r\n\r\n//\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  // Найдём все формы с указанным классом в DOM,\r\n  // сделаем из них массив методом Array.from\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  // Переберём полученную коллекцию\r\n  formList.forEach((popupElement) => {\r\n    // Для каждой формы вызовем функцию setEventListeners,\r\n    // передав ей элемент формы\r\n    setEventListeners(popupElement, validationConfig);\r\n  });\r\n};\r\n\r\n\r\nconst clearValidation = (popupElement, validationConfig) => {\r\n  const inputList = Array.from(popupElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((input) => {\r\n    input.setCustomValidity('')\r\n    hideInputError(popupElement, input, validationConfig);\r\n  })\r\n  const btn = popupElement.querySelector(validationConfig.submitButtonSelector)\r\n  btn.disabled = true;\r\n  btn.classList.add(validationConfig.inactiveButtonClass);\r\n};\r\n\r\n\r\nexport { enableValidation, clearValidation }","// index.js\r\n\r\nimport './pages/index.css'; // добавьте импорт главного файла стилей\r\nimport api from './components/api.js';\r\nimport { closeModal, openModal, setupPopupClose } from './components/modal.js';\r\nimport { createCard, deleteCard, likeCard } from './components/card.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\n\r\n// @todo: DOM узлы\r\nconst content = document.querySelector('.content');\r\nconst placesList = content.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\n// icon\r\nconst profileEditIcon = document.querySelector('.profile__edit-icon');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nsetupPopupClose(popupEdit);\r\n\r\n// Выберите элементы, куда должны быть вставлены значения полей\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image')\r\nconst profileAddButton = document.querySelector('.profile__add-button');\r\n\r\nconst imagePopupContainer = document.querySelector('.popup_type_image');\r\nsetupPopupClose(imagePopupContainer);\r\n\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nsetupPopupClose(popupNewCard);\r\n\r\nconst profileInfoInputName = popupEdit.querySelector('.popup__input_type_name');\r\nconst profileInfoInputDescription = popupEdit.querySelector(\r\n  '.popup__input_type_description'\r\n);\r\n\r\nconst popupImage = imagePopupContainer.querySelector('.popup__image');\r\nconst popupImageCaption = imagePopupContainer.querySelector('.popup__caption');\r\n\r\n// работа с формой\r\n// Находим форму в DOM\r\nconst formElementEditProfile = document.forms['edit-profile'];\r\n// Находим поля формы в DOM\r\nconst nameInput = formElementEditProfile.elements.name;\r\nconst jobInput = formElementEditProfile.elements.description;\r\n\r\nconst newPlaceCardForm = document.forms['new-place'];\r\nconst inputNameFormNewCard = newPlaceCardForm.elements['place-name'];\r\nconst inputLinkFormNewCard = newPlaceCardForm.elements['link'];\r\n//// icon form\r\nconst popupTypeAva = document.querySelector('.popup_type_ava')\r\nsetupPopupClose(popupTypeAva)\r\nconst updateAva = document.forms['new-ava'];\r\nconst inputLinkAva = updateAva.elements['link'];\r\n\r\n\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\nenableValidation(validationConfig);\r\n\r\nfunction openImagePopup(data) {\r\n  popupImage.src = data.link;\r\n  popupImage.alt = data.name;\r\n  popupImageCaption.textContent = data.name;\r\n  openModal(imagePopupContainer);\r\n}\r\n\r\n// @todo: Вывести карточки на страницу\r\nPromise.all([api.getProfile(), api.getCards()])\r\n  .then((results) => {\r\n    profileName.textContent = results[0].name;\r\n    profileJob.textContent = results[0].about;\r\n    profileImage.style = `background-image: url(${results[0].avatar})`;\r\n    results[1].forEach((card) => {\r\n      const cardElement = createCard(card, deleteCard, likeCard, openImagePopup, profileName.textContent);\r\n      placesList.append(cardElement);\r\n    });\r\n\r\n    return results\r\n  });\r\n\r\n\r\n// откр/ редактора карточки\r\nprofileEditButton.addEventListener('click', function (evt) {\r\n  profileInfoInputName.value = profileName.textContent;\r\n  profileInfoInputDescription.value = profileJob.textContent;\r\n  openModal(popupEdit);\r\n  clearValidation(popupEdit, validationConfig);\r\n  evt.stopPropagation();\r\n});\r\n\r\nprofileEditIcon.addEventListener('click', function (evt) {\r\n  openModal(popupTypeAva);\r\n  clearValidation(popupTypeAva, validationConfig);\r\n  evt.stopPropagation();\r\n})\r\nupdateAva.addEventListener('submit', function (evt) {\r\n  evt.preventDefault();\r\n  api.updateProfileAvatar(inputLinkAva.value)\r\n  .then((result) => {\r\n  profileImage.style = `background-image: url(${result.avatar})` ;\r\n  })\r\n  updateAva.reset();\r\n  saveBtn(evt, true)\r\n  closeModal(popupTypeAva);\r\n});\r\n\r\n\r\n\r\n// закр через  +\r\nnewPlaceCardForm.addEventListener('submit', function (evt) {\r\n  evt.preventDefault();\r\n  api.addNewCard(inputNameFormNewCard.value, inputLinkFormNewCard.value)\r\n    .then((res) => {\r\n      const cardElement = createCard(\r\n        res,\r\n        deleteCard,\r\n        likeCard,\r\n        openImagePopup,\r\n        profileName.textContent\r\n      );\r\n      placesList.prepend(cardElement);\r\n      newPlaceCardForm.reset();\r\n      saveBtn(evt, true)\r\n      closeModal(popupNewCard);\r\n    });\r\n\r\n});\r\n\r\nprofileAddButton.addEventListener('click', (evt) => {\r\n  clearValidation(popupNewCard, validationConfig);\r\n  openModal(popupNewCard);\r\n  evt.stopPropagation();\r\n});\r\n\r\nfunction saveBtn(evt, load) {\r\n  const submitButton = evt.submitter;\r\n    if(load)\r\n    {\r\n      submitButton.textContent = 'Сохранение...';\r\n      submitButton.disablaed = true;\r\n    }\r\n    else {\r\n      submitButton.textContent = 'Сохранить';\r\n      submitButton.disablaed = false;\r\n    }\r\n}\r\n\r\n// Обработчик «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction handleFormSubmitEditProfile(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n \r\n  // Так мы можем определить свою логику отправки.\r\n  // О том, как это делать, расскажем позже.\r\n\r\n  // Получите значение полей jobInput и nameInput из свойства value\r\n  const nameValue = nameInput.value;\r\n  const jobValue = jobInput.value;\r\n\r\n  // Вставьте новые значения с помощью textContent\r\n  profileName.textContent = nameValue;\r\n  profileJob.textContent = jobValue;\r\n  api.updateEditProfile(nameValue, jobValue);\r\n  saveBtn(evt, true)\r\n  closeModal(popupEdit);\r\n}\r\n\r\n// Прикрепляем обработчик к форме:\r\n// он будет следить за событием “submit” - «отправка»\r\nformElementEditProfile.addEventListener('submit', handleFormSubmitEditProfile);\r\n"],"names":["config","baseUrl","headers","authorization","cardId","isLike","fetch","concat","method","then","res","ok","json","Promise","reject","status","catch","err","console","log","closeModalOnEscape","evt","key","closeModal","document","querySelector","overlayClick","popupOpen","target","openModal","popupModal","classList","add","addEventListener","remove","removeEventListener","setupPopupClose","popupEdit","cardTemplate","content","createCard","cardData","onDeleteCard","onLikeCard","onOpenImagePopup","ownerName","cardElement","cloneNode","deleteCardButton","cardImage","likeButton","counterLikeCard","textContent","name","src","link","alt","likes","length","owner","style","_id","deleteCard","api","likeCard","contains","hideInputError","popupElement","popupInput","validationConfig","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","inactiveButtonClass","some","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","forEach","input","setCustomValidity","btn","submitButtonSelector","placesList","profileEditButton","profileEditIcon","profileName","profileJob","profileImage","profileAddButton","imagePopupContainer","popupNewCard","profileInfoInputName","profileInfoInputDescription","popupImage","popupImageCaption","formElementEditProfile","forms","nameInput","elements","jobInput","description","newPlaceCardForm","inputNameFormNewCard","inputLinkFormNewCard","popupTypeAva","updateAva","inputLinkAva","formSelector","openImagePopup","data","saveBtn","load","submitButton","submitter","disablaed","inputElement","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation","all","results","about","avatar","card","append","value","stopPropagation","preventDefault","body","JSON","stringify","result","reset","inputNameFormNewCardValue","inputLinkFormNewCardValue","prepend","nameValue","jobValue"],"sourceRoot":""}